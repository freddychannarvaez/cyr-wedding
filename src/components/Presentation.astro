---
interface Props {
  name1: string;
  name2: string;
  text1: string;
  text2: string;
  month: string;
  day: string;
  year: string;
  hour: string;
  address1: string;
  address2: string;
}

const { name1, name2, text1, text2, month, day, year, hour, address1, address2 } = Astro.props;
---
<section>
  <div class="info" data-aos="fade-left">
    <div class="names">
      <p class="name">{name1}</p>
      <p class="name">&</p>
      <p class="name">{name2}</p>
    </div>
    <div class="text">
      <p class="text1">{text1}</p>
      <p class="text2">{text2}</p>
    </div>
    <div class="date">
      <p class="month">{month}</p>
      <div class="separator"></div>
      <p class="day">{day}</p>
      <div class="separator"></div>
      <p class="year">{year}</p>
    </div>
    <p class="hour">Recepción al evento: {hour}</p>
    <p class="address1">{address1}</p>
    <p class="address2">{address2}</p>
    <div class="demo">
      <div class="days">
        <span id="days" class="number"></span>
        <span>Días</span>
      </div>
      <div class="days">
        <span id="hours" class="number"></span>
        <span>Horas</span>
      </div>
      <div class="days">
        <span id="minutes" class="number"></span>
        <span>Minutos</span>
      </div>
      <div class="days">
        <span id="seconds" class="number"></span>
        <span>Segundos</span>
      </div>
    </div>
  </div>
  <img src="presentation.avif" class="image" data-aos="fade-in">
  <img src="/leaves3.svg" class="leaves3">
  <img src="/leaves4.svg" class="leaves4">
  <img src="/leaves5.svg" class="leaves5">
  <img src="/leaves6.svg" class="leaves6">
  <img src="/leaves7.svg" class="leaves7">

</section>
<style>
  section {
    background-color: #EFEAE7;
    min-height: 800px;
		font-family: 'Tw Cen MT', sans-serif;
    position: relative;
  }
  .info {
    padding: 100px 12%;
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: 20px;
    text-transform: uppercase;
    text-align: center;
  }
  .names {
    display: inherit;
    flex-direction: inherit;
    align-items: center;
    padding: 40px 0;
  }
  .name {
    font-size: 50px;
    margin: 15px 0;
    letter-spacing: 15px;
  }
  .text {
    letter-spacing: 5px;
    line-height: 30px;
    padding-bottom: 50px;
  }
  .date {
    display: flex;
    flex-direction: row;
    font-size: 50px;
    letter-spacing: 10px;
    padding-bottom: 50px;
    @media (width < 650px) {
      flex-direction: column;
      row-gap: 20px;
      align-items: center;
    }
    p {
      margin: 20px 10px;
    }
    .separator {
      border-left: 2px solid black;
      height: 90px;
      @media (width < 650px) {
        border-left: unset;
        border-bottom: 2px solid black;
        height: 1px;
        width: 60%;
      }
    }
    .day {
      font-size: 90px;
      line-height: 70px;
      margin: 0 10px;
    }
    .month, .year {
      margin: 5px 30px;
    }
  }
  .hour, .address1, .address2 {
    letter-spacing: 3px;
  }
  .image {
    width: 100%;
  }

  /* Contador */
  .demo {
    width: 80%;
    z-index: 2;
    padding-top: 50px;
    display: grid;
    grid-template-columns: repeat(4, 10%);
    gap: 10%;
    justify-content: center;
    @media (width < 769px) {
      grid-template-columns: repeat(4, 15%);
      width: 100%;
    }
  }
  .days {
    display: flex;
    flex-direction: column;
    text-transform: none;
    text-align: center;
    font-size: 24px;
    @media (width < 769px) {
      font-size: 18px;
    }
    @media (width < 599px) {
      font-size: 14px;
    }
  }
  .number {
    font-size: 54px;
    @media (width < 769px) {
      font-size: 34px;
    }
    @media (width < 599px) {
      font-size: 24px;
    }
    &:hover {
      text-shadow: 1px 1px 10px darkgray;
    }
  }

  /* Hojas */
  .leaves3 {
    position: absolute;
    top: 0;
    left: 0;
    height: 600px;
    @media (width < 900px) {
      height: 25%;
    }
    @media (width < 600px) {
      height: 12%;
    }
  }
  .leaves4 {
    position: absolute;
    height: 200px;
    left: 0;
    top: 700px;
    @media (width < 900px) {
      height: 10%;
      top: 30%
    }
  }
  .leaves5 {
    position: absolute;
    width: 250px;
    left: 0;
    bottom: 4px;
    @media (width < 900px) {
      width: 25%;
    }
  }
  .leaves6 {
    position: absolute;
    height: 20%;
    right: 0;
    top: 0;
    @media (width < 900px) {
      height: 10%;
    }
  }
  .leaves7 {
    position: absolute;
    width: 250px;
    right: 0;
    bottom: 4px;
    @media (width < 900px) {
      width: 25%;
    }
  }
</style>
<script>
  // Set the date we're counting down to
  var countDownDate = new Date("Jan 18, 2025 18:00:00").getTime();

  // Update the count down every 1 second
  var x = setInterval(function() {

    // Get today's date and time
    var now = new Date().getTime();

    // Find the distance between now and the count down date
    var distance = countDownDate - now;

    // Time calculations for days, hours, minutes and seconds
    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

    // Display the result in the corresponding elements using id
    document.getElementById("days")!.innerHTML = days.toString();
    document.getElementById("hours")!.innerHTML = hours.toString();
    document.getElementById("minutes")!.innerHTML = minutes.toString();
    document.getElementById("seconds")!.innerHTML = seconds.toString();

    // If the count down is finished, write some text
    if (distance < 0) {
      clearInterval(x);
      // document.getElementById("demo").innerHTML = "EXPIRED";
    }
  }, 1000);
</script>